# Configuration file
# key = value
quarkus.http.port=8080
%dev.quarkus.http.port=8082

application.data-producer.url=data-producer
%dev.application.data-producer.url=localhost
application.data-producer.port=8080
%dev.application.data-producer.port=8080

data-producer-api/mp-rest/url=http://${application.data-producer.url}:${application.data-producer.port}
data-producer-api/mp-rest/scope=javax.inject.Singleton

# Configure the SmallRye Kafka connector
#kafka.bootstrap.servers=amm-techlab-kafka-bootstrap:9092
#%dev.kafka.bootstrap.servers=localhost:9092

# Configure the Kafka sink
#mp.messaging.incoming.data.connector=smallrye-kafka
#mp.messaging.incoming.data.topic=manual
#mp.messaging.incoming.data.value.deserializer=ch.puzzle.quarkustechlab.reactivetransformer.control.SensorMeasurementDeserializer

# Configure Jaeger
quarkus.jaeger.enabled=false
%dev.quarkus.jaeger.enabled=false
quarkus.jaeger.endpoint=http://jaeger-all-in-one-inmemory-collector:14268/api/traces
%dev.quarkus.jaeger.endpoint=http://localhost:14268/api/traces
quarkus.jaeger.service-name=data-transformer
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1

# Configure logging
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# Configure health extensions
quarkus.health.extensions.enabled=false
%dev.quarkus.health.extensions.enabled=false

